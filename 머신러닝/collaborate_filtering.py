# -*- coding: utf-8 -*-
"""collaborate_filtering.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OClvlPbDJBO9ebn7Omk0Q7pHYK9pfEZh

협업필터링
  - 새로운 객체를 찾기위한 과정, 데이터 세트내의 객체간 패턴검출
  - 유사한 사용자를 살펴봄
  - 두 사람이 특정 영화들에 대한 평점이 비슷하다면 다른 영화도 비슷할 것이다
  - 유사성 점수기법 : 유사한 사용자를 찾기위한 방법
  - 금융,온라인쇼핑 , 마케팅, 고객연구등..
"""

import argparse
import json
import numpy as np
from compute_score import person_score

def build_parser():
  parser = argparse.ArgumentParser()
  parser.add_argument('--user',dest='user',required=True, help='Input user')
  parser.add_argument('--jsonfile',dest='jsonfile',required=True, help='Json file path')
  return parser

"""데이터 세트에서 입력한 사용자와 유사한  사용자를 찾는 함수이고 사용자가 없으면 에러 발생"""

def find_simular_user(dataset,user,num_users):
  if user not in dataset:
    raise TypeError(f"Can't find {user} in the dataset")
  # 입력한  사용자와 데이터세트내의 다른 사용자간의 피어슨 점수를 계산
  scores = [ [x, person_score(dataset,user,x)] for x in dataset if x != user ]
  scores = np.array(scores)
  scores_sorted = np.argsort(scores[:,1])[::-1]
  # num_users 의 갯수만큼  상위 데이터를 추출
  top_users = scores_sorted[:num_users]
  return scores[top_users]

# 메인 프로그램
if __name__ == '__main__':
  args = build_parser().parse_args()
  user = args.user
  jsonfile = args.jsonfile
  # 파일 읽기
  with open(jsonfile,'r') as f:
    data = json.loads(f.read())
  # 입력한 사용자와 유사한 상위 3명을 찾는다
  print(f"find simular user to {user}")
  simular_user = find_simular_user(data,user,3)  
  print('*'*20)
  for item in simular_user:
    print(f'{item[0]}, \t\t {round(float(item[1]),2)}')

